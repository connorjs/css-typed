name: Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      GitVersion_SemVer: ${{ steps.GitVersion.outputs.GitVersion_SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full depth (not shallow) for GitVersion and better relevancy of Sonar analysis

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v2.0.1
        with:
          versionSpec: 6.x

      - name: Execute GitVersion
        id: GitVersion
        uses: gittools/actions/gitversion/execute@v2.0.1
        with:
          overrideConfig: |
            workflow=GitHubFlow/v1
            mode=ContinuousDeployment

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: .node-version

      - name: Install
        run: npm ci

      - name: CI build
        run: npm run ci-build

  Test:
    name: Test (${{ matrix.node }} | ${{ matrix.platform.os }})
    needs: Build # Verify ci-build first
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        node:
          - 20.x
          - 22.x
        platform:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: ${{ matrix.node }}

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      # Run tests
      #
      # - Run from $RUNNER_TEMP for auto-cleanup.
      # - `./dist/main.js` is executing local `css-typed` as if installed (same as `bin`).
      #   But it is `$GITHUB_WORKSPACE/dist/main.js` b/c we `cd $RUNNER_TEMP`.
      # - Use `diff` to compare the files.
      #   Use `-I '//.*'` to ignore the first line (comment) which has generated path and timestamp.

      - name: "Test 1: Default case"
        run: |
          cp src/fixtures/casing/casing.css $RUNNER_TEMP/casing.css
          cp src/fixtures/casing/dashesOnly.d.css.ts $RUNNER_TEMP/expected.d.css.ts

          cd $RUNNER_TEMP
          $GITHUB_WORKSPACE/dist/main.js '*.css'
          diff --strip-trailing-cr -uI '//.*' expected.d.css.ts casing.d.css.ts

      - name: "Test 2: localsConvention, second position"
        run: |
          cp src/fixtures/casing/casing.css $RUNNER_TEMP/casing.css
          cp src/fixtures/casing/camelCaseOnly.d.css.ts $RUNNER_TEMP/expected.d.css.ts

          cd $RUNNER_TEMP
          $GITHUB_WORKSPACE/dist/main.js '*.css' --localsConvention camelCaseOnly
          diff --strip-trailing-cr -uI '//.*' expected.d.css.ts casing.d.css.ts

      - name: "Test 3: localsConvention, first position"
        run: |
          cp src/fixtures/casing/casing.css $RUNNER_TEMP/casing.css
          cp src/fixtures/casing/camelCaseOnly.d.css.ts $RUNNER_TEMP/expected.d.css.ts

          cd $RUNNER_TEMP
          $GITHUB_WORKSPACE/dist/main.js --localsConvention camelCaseOnly '*.css'
          diff --strip-trailing-cr -uI '//.*' expected.d.css.ts casing.d.css.ts

      - name: "Test 4: relative outdir"
        run: |
          cp src/fixtures/casing/casing.css $RUNNER_TEMP/casing.css
          cp src/fixtures/casing/dashesOnly.d.css.ts $RUNNER_TEMP/expected.d.css.ts

          cd $RUNNER_TEMP
          $GITHUB_WORKSPACE/dist/main.js '*.css' --outdir generated
          diff --strip-trailing-cr -uI '//.*' expected.d.css.ts generated/casing.d.css.ts

      - name: "Test 5: absolute outdir"
        run: |
          cp src/fixtures/casing/casing.css $RUNNER_TEMP/casing.css
          cp src/fixtures/casing/dashesOnly.d.css.ts $RUNNER_TEMP/expected.d.css.ts

          cd $RUNNER_TEMP
          $GITHUB_WORKSPACE/dist/main.js '*.css' -o $GITHUB_WORKSPACE/generated
          diff --strip-trailing-cr -uI '//.*' expected.d.css.ts $GITHUB_WORKSPACE/generated/casing.d.css.ts

  Publish:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Publish
    needs:
      - Build # For version variable
      - Test # Requires passing tests
    runs-on: ubuntu-latest
    env:
      GitVersion_SemVer: ${{needs.Build.outputs.GitVersion_SemVer}}
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: .node-version
          registry-url: https://registry.npmjs.org

      - name: Set version
        run: sed -i 's/0.0.0-gitversion/${{ env.GitVersion_SemVer }}/g' package.json

      - name: Install
        run: npm install

      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: git tag
        run: |
          git tag v${{ env.GitVersion_SemVer }}
          git push origin tag v${{ env.GitVersion_SemVer }}
